TASK 2
After deploying the machine use your attack box we are supposed to login into the machine using ssh.
syntax: ssh username@host_name/ipaddress (or) ssh -p port_number username@host_name/ipaddress
sol. ssh tryhackme@10.10.231.247
fingerprinting? yes
Password: tryhackme
tryhackme@linux3:~$ 

TASK 3
Terminal text editors
Nano 
- syntax: nano file_name
- if the file doesn't exists it will create one
- features
  -> ctrl O - save the file then it will ask if that is the file where you wanna save press enter
  -> ctrl x - exit
  -> ctrl k - cut
  -> ctrl u - paste
- there is mmore to it's features you can see at the bottom of the text editor once you open it.

Vim
- You can modify the keybord shortcuts to be of your choosing.
- vim works on all terminals where nano may not be installed

a. Edit "task3" located in tryhackme"'s home directory using nano. What is the flag?
sol.THM{TEXT_EDITORS}
nano task3
THM{TEXT_EDITORS}

TASK 4
Here we learn about some deneral/useful utilities
i. wget 
- downloads file from web via HTTP 
- we simply need to provide the address of the resource we wish to download.
- syntax: wget address_of_resourse
ii. scp (secure copy)
- A means of securely copying files.Unlike the regular cp command, this allows you to transfer files between two computers using ssh protocol to provide both authentication and encrption
- we can copy files annd directories from  my computer to remote system and the other way around.
- provided we know the user name and password for a user in current system and a user in remote system.
- syntax to copy file from our system to remote system:
      scp file_/_folder_name username@target_address:path/to/the/directory/where/you/want/save/it/name_of_file_or_folder_to_save_as
  eg. scp imp.txt ubuntu@192.168.1.30:/home/ubuntu/transferred.txt
- syntax to transfer file from remote system to our system:
      scp username@target_address:path/to/the/file_or_folder_we_want  file/folder_name_to_save_it_as
  eg. scp ubuntu@192.168.1.30:/home/ubuntu/doc.txt note.txt
iii. Serving file from your host
- ubuntu comes with pre-packaged with python3 that provides a lightweight and easy-to use module called HTTPServer.
- this module turns your computer into a quick and easy webserver that you can use to serve your own file, where they can be downloaded by another computing using curl or wget command.
- syntax: python -m http.server
- alternatives: updog

a. Now use python 3's "HTTPServer" module to start a web server in the home directory of "tryhackme" user on the deployed instance
sol. python -m http.server

b. Download the file http://10.10.231.247:8000/.flag.txt onto the tryhackme attackbox
sol. 
root@ip-10.10.105.8:~# wget http://10.10.231.247:8000/.flag.txt
root@ip-10.10.105.8:~# ls -a
Desktop Instructions Postman Thinclient_drives
Downloads Pictures Scripts Tools .flag.txt ......
root@ip-10.10.105.8:~# cat .flag.txt
THM{WGET_WEBSERVER}

TASK 5
- Processes are the programs that are running on your machine.
- They are managed by the kernel, and have a identifying id called al PID. PID is given according to the order in which the program is started i.e the progrm that started first will have PID value of 1.


command              use                                                                                                               syntax
  ps              get the list of program running as our user's session and some additional info such as it's status code,               ps
                  the session that is running it, how much usage time of the CPU it is using,
                  and the name of the actual program or command that is being executed
  top                 get the real time statistics about the process running on your system.                                             kill PID_number
  kill                command to terminate a process

- to see processes run by other users and system processes we add aux to ps command
    syntax: ps aux
- These statistics will refresh every 10 sec, but will refresh when you use arrow key to browse the various rows.
- Signals that we can send to a process when it is killed:
  -> SIGTERM - kill the process, but allow it to do some cleanup tasks beforehand
  -> SIGKILL - kill the process and don't allow it to do any cleanup tasks  
  -> SIGSTOP - stop/suspend a process

How do process start
- OS uses namespaces to ultimately split up the resources available on the computer to  processes.
- Namespace are great fofr as they are a way of isolating a process from another. 
- only those in the same namespace will be able to see each other.
- The process with ID of 0 is a process that is started when the system boots.
- For Ubuntu pid 0 is system's init, such as systems, which is used to provide a way of managing a user's processes and sits in between the OS and the user.
- eg. Once a system boots and it initialises, systemd is one of the first processes that are started.
      Any program or piece of software that we want to start will start as what's known as a child process of systemd.
      This means that it is controlled by systemd, but will run as its own process to make it easier for us to identify and the likes.
      overview
      pid         command
      0           system's init
      1            systemd
      any other process as a child process of systemd 

# NOTE #
"ps -ef --forest"   command will show the process tree, helping you visualize the relationship between processes.

Getting Processes/services to start on boot
- Some applications can be started on the boot of the system that we own. eg. web servers, database servers or file transfer servers.

  command             use                                                   syntax
  systemctl           allows us to interact with the systemd process        systemctl [option] [service]

systemctl have 4 options
i. Start
ii. Stop
iii. Enable
iv. Disable

An Introduction to Backgrounding and Foregrounding 

command       use
  &           to make the command run in the background
  fg          to make the background running command back into the terminal

a. If we were to launch a process where the previous ID was “300”, what would the ID of this new process be?
sol. 301

b. If we wanted to cleanly kill a process, what signal would we send it?
sol. SIGTERM

c. Locate the process that is running on the deployed instance (MACHINE_IP). What flag is given?
sol. THM{PROCESSES}

d. What command would we use to stop the service “myservice”?
sol. systemctl stop myservice

e. What command would we use to start the same service on the boot-up of the system?
sol. systemctl enable myservice

f. What command would we use to bring a previously backgrounded process back to the foreground?
sol. fg

TASK 6
Maintaing Your System : Automation
- User may want some program to start as the soon the system is booted.
- Here we learn about cron process and crontabs to interact with cron processes.
- Crontab is one of the processes that is started during boot, responsible for facilitating and managing cron jobs.
- Crontab is a special file with formatting that is recognised by the cron process to execute each line step-by-step.
- Crontab requires 6 specific values:

  value                           Description
  MIN                             what minute to execute at
  HOUR                            what minute to execute at
  DOM                             what day of the month to execute at
  MON                             what month of the year to execute at
  DOW                             What day of the week to execute at
  CMD                             the actual command that will be executed

- eg We want to back up file (cmnatic's document) every 12 hour 0 minutes 
  Crontab format:
      0 *12 * * * cp -R /home/cmnatic/Documents /var/backups/
      i. MIN - 0
      ii. HOUR - *12 ##every 12 hour
      iii. DOM - *  ##since we want to back up every day. If we want to back up on a specific day of the month we can set it accordingly. 
      iv. MON - *   ##since we want to back up every month. If we want to back up on a specific month of the year we can set it accordingly.
      v. DOW - *    ##since we want to back up every day of the week. If we want to back up on a specific day of the week we can set it accordingly.
      vi. CMD - cp -R /home/cmnatic/Documents /var/backups/    ##The command that will be executed. 
- eg We want to back up file (cmnatic's document) every day at 12 O'Clock. 
  Crontab format:
      0 12 * * * cp -R /home/cmnatic/Documents /var/backups/
      i. MIN - 0
      ii. HOUR - 12 ## 12 O'Clock.
      iii. DOM - *   
      iv. MON - *   
      v. DOW - *    
      vi. CMD - cp -R /home/cmnatic/Documents /var/backups/     
- " * " is used If we do not wish to provide a value for that specific field, i.e. we don't care what month, day, or year it is executed
## NOTE ##
resource to know more about Crontab
- https://crontab-generator.org/
- https://crontab.guru/
##########

- Crontab can be edited using  " crontab -e " .

a. When will the crontab on the deployed instance (MACHINE_IP) run?
sol.  @reboot
corntab file 
@reboot /var/opt/processes.sh

TASK 7
Maintaing Your System : Package Management
Introducing Packages & Software Repos
- Repositories: A repository is a storage location where developers submit their software for users to download and install.
- Apt Repositories: In Ubuntu, these repositories are managed through apt (Advanced Packaging Tool), the package manager that simplifies software installation and updates.
- Developers can submit their tools or programs to official repositories.
- After approval, the software becomes available to users through package managers like apt. There are 2 ubuntu repositories available i.e:
    -> Official Repositories: Managed and maintained by the Ubuntu team or your OS vendor, containing reliable, verified packages.
    -> Community Repositories: External repositories added by the community, providing additional software that is not part of the default Ubuntu repositories.
- You can view the list of repositories that your system uses by running certain commands, like ls in directories such as /etc/apt/sources.list.d/.
- These files act as a registry, listing available sources for downloading and updating software.
- You can extend the functionality of your system by adding third-party or community repositories.
- Use the add-apt-repository command to include these repositories.

Managing Your Repositories (Adding and Removing)
- we use the apt command to install software onto our Ubuntu system.
- Let's understand how to install and delete a software using apt and  add-apt-repository commands. using the example of installing Sublime Text:
- When adding software, the integrity of what we download is guaranteed by the use of what is called GPG (Gnu Privacy Guard) keys. These keys are essentially a safety check from the developers saying, “here’s our software”. If the keys do not match up to what your system trusts and what the developers used, then the software will not be downloaded.
- So, to start, we need to add the GPG key for the developers of Sublime Text 3. 
    root@linux3:~/# wget -qO - https://download.sublimetext.com/sublimehq-pub.gpg | sudo apt-key add -
- Now that we have added this key to our trusted list, we can now add Sublime Text 3’s repository to our apt sources list. 
- A good practice is to have a separate file for every different community/3rd party repository that we add.
- Let’s create a file named sublime-text.list in /etc/apt/sources.list.d
    root@linux3:~/# cd /etc/apt/sources.list.d
    root@linux3:/etc/apt/sources.list.d# touch sublime-text.list
    root@linux3:/etc/apt/sources.list.d# ls
    sublime-text.list
- now use Nano or a text editor of your choice to add & save the Sublime Text 3 repository into this newly created file:
    root@linux3:/etc/apt/sources.list.d# nano sublime-text.list
    sublime-text.list
    deb https://download.sublimetext.com/ apt/stable/
- After we have added this entry, we need to update apt to recognise this new entry — this is done using the apt update command
- Once successfully updated, we can now proceed to install the software that we have trusted and added to apt using apt install sublime-text
- Removing packages is as easy as reversing. This process is done by using the add-apt-repository --remove ppa:PPA_Name/ppa command or by manually deleting the file that we previously fulfilled. Once removed, we can just use apt remove [software-name-here] i.e. apt remove sublime-text

TASK 8
Maintaining Your System: Logs
- Located in the /var/log directory, these files and folders contain logging information for applications and services running on your system.
- The Operating System (OS) has become pretty good at automatically managing these logs in a process that is known as “rotating”.
- some example of logs for 3 services running in ubuntu machine are : 
  -> Apache2 web server
  -> fail2ban service  (used to monitor attempted brute forces)
  ->  UFW service  (which is used as a firewall)
- These services and logs are a great way in monitoring the health of your system and protecting it.
- Not only that, but the logs for services such as a web server contain information about every single request — allowing developers or administrators to diagnose performance issues or investigate an intruder’s activity.
- For example, the two types of log files below that are of interest:
    -> access log
    -> error log
- There are, of course, logs that store information about how the OS is running itself and actions that are performed by users, such as authentication attempts.

a. Look for the apache2 logs on the deployable linux machine.
tryhackme@linux3:~$ cd /var/log/apache2
tryhackme@linux3:/var/log/apache2$ ls
access.log  error.log  other_vhosts_access.log
access.log.1  error.log.1
tryhackme@linux3:/var/log/apache2$ 

b. What is the IP address of the user who visited the site?
sol. 10.9.232.111
tryhackme@linux3:/var/log/apache2$ less access.log.1
....10.9.232.111......"GET /catsanddogs.jpg.....

c. What file did they access?
sol. catsanddogs.jpg

